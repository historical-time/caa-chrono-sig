library(ggtern)
library(plotly)
library(dplyr)
library(DT)
library(ggtern)
ggtern
detach("package:ggtern", unload = TRUE)
library(ggtern)
remove.packages("ggtern")
install.packages("ggtern")
library(plotly)
library(dplyr)
library(DT)
# library(ggtern)
library(kableExtra)
library(knitr)
library(FactoMineR)
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
dt <- datatable(df,
rownames = FALSE,
width = '20%',
options = list(searching = FALSE,
lengthChange = FALSE,
paging = FALSE,
scrollX = F,
initComplete = JS("function(settings, json) {$(this.api().table().header()).css({'font-size' : '20px'});}"),
info = FALSE,
filter = "none")) %>%
formatStyle("feat",
backgroundColor = styleEqual(c("A", "B", "C"),
c('#FF000070', '#00800070', '#0000FF70'))
) %>%
formatStyle(columns = c(1, 2, 3, 4),
fontSize = '20px')
dt
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
theme_showarrows() +
theme(legend.position="none")
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
# theme_showarrows() +
theme(legend.position="none")
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
# theme_showarrows() +
theme(legend.position="none")
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
# theme_showarrows() +
theme(legend.position="none")
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw()
install.packages("ggplot2")
library(plotly)
library(dplyr)
library(DT)
# library(ggtern)
library(kableExtra)
library(knitr)
library(FactoMineR)
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
dt <- datatable(df,
rownames = FALSE,
width = '20%',
options = list(searching = FALSE,
lengthChange = FALSE,
paging = FALSE,
scrollX = F,
initComplete = JS("function(settings, json) {$(this.api().table().header()).css({'font-size' : '20px'});}"),
info = FALSE,
filter = "none")) %>%
formatStyle("feat",
backgroundColor = styleEqual(c("A", "B", "C"),
c('#FF000070', '#00800070', '#0000FF70'))
) %>%
formatStyle(columns = c(1, 2, 3, 4),
fontSize = '20px')
dt
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
# theme_showarrows() +
theme(legend.position="none")
packageVersion("ggplot2")
packageVersion("ggtern")
library(ggtern)
remove.packages("ggtern")
remotes::install_version("ggtern", version = "3.3.0")
install.packages("ggtern")
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
# theme_showarrows() +
theme(legend.position="none")
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
theme_showarrows() +
theme(legend.position="none")
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
theme_showarrows() +
theme(legend.position="none")
packageVersion("ggtern")
packageVersion("ggplot2")
remotes::install_github("ggtern/ggtern")
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
theme_showarrows() +
theme(legend.position="none")
remotes::install_version("ggplot2", version = "3.5.1")
#| fig-width: 8
df <- data.frame(feat = c("A", "B", "C"),
where = c(20, 60, 60),
when = c(10, 30, 20),
what = c(70, 10, 20),
row.names = c("A", "B", "C"))
sites <- rownames(df)
ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
theme_bw() +
geom_point(alpha = 0.5, size = 17) +
geom_point(size = 1, color = "black") +
theme_showarrows() +
theme(legend.position="none")
#| fig-width: 8
# df <- data.frame(feat = c("A", "B", "C"),
#                  where = c(20, 60, 60),
#                  when = c(10, 30, 20),
#                  what = c(70, 10, 20),
#                  row.names = c("A", "B", "C"))
#
# sites <- rownames(df)
#
# ggtern::ggtern(data = df, aes(x = where, y = when, z = what, col = sites)) +
#   theme_bw() +
#   geom_point(alpha = 0.5, size = 17) +
#   geom_point(size = 1, color = "black") +
#   theme_showarrows() +
#   theme(legend.position="none")
# install.packages("plotly")  # once
library(plotly)
df$sites <- rownames(df)
plot_ly(
df, type = "scatterternary",
a = ~where, b = ~when, c = ~what,
color = ~sites, mode = "markers",
marker = list(size = 17, opacity = 0.5, line = list(width = 1)) # outline ~ your black dot
) %>%
layout(
ternary = list(
sum = 100,
aaxis = list(title = "where"),
baxis = list(title = "when"),
caxis = list(title = "what")
),
showlegend = FALSE
)
run.order <- openxlsx::read.xlsx("../papers_ruling_order.xlsx", na.strings = "", detectDates = F)
knitr::kable(run.order, "html") %>%
kableExtra::kable_styling(full_width = FALSE,
position = "center",
font_size = 20) %>%
row_spec(7, bold = T, hline_after = T)
